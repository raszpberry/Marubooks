<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>